[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # hybrid
repo = 'w0ng/vim-hybrid'

[[plugins]] # ステータスライン
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {'colorscheme': 'wombat'}
'''

[[plugins]] # Toml
repo  = 'cespare/vim-toml'

[[plugins]] # typescript-vim
repo  = 'leafgarland/typescript-vim'

# [[plugins]] # Golang
# repo = 'fatih/vim-go'
# hook_add = '''
#     let g:go_highlight_functions = 1
#     let g:go_highlight_methods = 1
#     let g:go_highlight_fields = 1
#     let g:go_highlight_types = 1
#     let g:go_highlight_operators = 1
#     let g:go_highlight_build_constraints = 1
#     let g:go_fmt_command = "goimports"
#     let g:go_file_type = "quickfix"
#     let g:go_def_mode = "guru"
#     let g:neomake_go_enabled_makers = ['golint', 'govet']
# '''

[[plugins]]
repo = 'mattn/vim-goimports'

[[plugins]] # Japanese doc
repo = 'vim-jp/vimdoc-ja'
hook_add = 'set helplang=ja,en'

[[plugins]]
repo = 'preservim/nerdtree'
hook_add = '''
    noremap <C-K> :NERDTree<CR>
    noremap <C-J> :NERDTreeFind<CR>
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'h1mesuke/vim-alignta'

[[plugins]]
repo = 'tacahiroy/ctrlp-funky'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
    let $FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
    nnoremap <C-P> :Files<CR>
    nnoremap <C-"> :GFiles?<CR>
    nnoremap <C-'> :FzfRg<CR>

    command! -bang -nargs=* FzfRg
      \ call fzf#vim#grep(
      \   'rg --line-number --no-heading '.shellescape(<q-args>), 0,
      \   fzf#vim#with_preview({'options': '--exact --reverse'}, 'right:50%:wrap'))
'''

# lsp
[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'mattn/vim-lsp-settings'

# Auto-complete
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'



# [[plugins]]
# repo='prabirshrestha/asyncomplete.vim'
#
# [[plugins]]
# repo='prabirshrestha/asyncomplete-lsp.vim'

#[[plugins]]
#repo='prabirshrestha/asyncomplete-neosnippet.vim'
#hook_add='''
#call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
#    \ 'name': 'neosnippet',
#    \ 'whitelist': ['*'],
#    \ 'completor': function('asyncomplete#sources#neosnippet#completor'),
#    \ }))
#imap <C-k>     <Plug>(neosnippet_expand_or_jump)
#smap <C-k>     <Plug>(neosnippet_expand_or_jump)
#xmap <C-k>     <Plug>(neosnippet_expand_target)
#'''

#[[plugins]]
#repo = 'autozimu/LanguageClient-neovim'
#rev = 'next'
#build = 'bash install.sh'
#hook_add = '''
#source ~/.config/nvim/plugins/LanguageClient-neovim.rc.vim
#'''

# [[plugins]]
# repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]] # GraphQL
repo = 'jparise/vim-graphql'

# [[plugins]]
# repo = 'neoclide/coc.nvim'
# build = './install.sh nightly'
# merged = '0'

[[plugins]]
repo = 'impactaky/deepl.nvim'
hook_add = '''
vmap zj :call deepl#replace_to_translated_text('', 'JA')<CR>gvgq
vmap ze :call deepl#replace_to_translated_text('', 'EN')<CR>gvgq
nmap zj vip:call deepl#replace_to_translated_text('', 'JA')<CR>gvgq
nmap ze vip:call deepl#replace_to_translated_text('', 'EN')<CR>gvgq
'''

[[plugins]]
repo = 'google/vim-jsonnet'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'weirongxu/plantuml-previewer'
